name: '5.0$(rev:.r)'

trigger:
  batch: true
  branches:
    include:
    - main
    - feature/*

pr:
- main

pool:
  vmImage: 'windows-2022'

variables:
- name: 'marketplaceServiceConnection'
  value: '84645cfd-95a8-4fcc-bb6a-d8e35e3d699d'

stages:
- stage: 'Build'
  displayName: 'Build'
  jobs:
  - job:
    displayName: 'Build on Windows'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '16.x'
      displayName: 'Install Node.js'

    - script: |
        npm run initdev
      displayName: 'Install Node dependencies'

    - powershell: |
        $vswhereLatest = "https://github.com/Microsoft/vswhere/releases/latest/download/vswhere.exe"

        $targets = @(
          ".\BuildTasks\PublishVSExtension\v4\tools\",
          ".\BuildTasks\PublishVSExtension\v5\tools\"
        )

        invoke-webrequest $vswhereLatest -OutFile $env:temp\vswhere.exe

        $targets | %{
          mkdir $_ -force | out-null
          copy $env:temp\vswhere.exe $_ -force
        }
      displayName: 'Grab the latest version of vswhere.exe'

    - task: Npm@1
      displayName: 'Build the extension'
      inputs:
        command: custom
        verbose: false
        customCommand: 'run build'

    - task: Npm@1
      displayName: 'Prepare the extension'
      inputs:
        command: custom
        verbose: false
        customCommand: 'run package'

    - pwsh: |
        del BuildTasks\PublishExtension\v5\node_modules\7zip-bin\linux -recurse
        del BuildTasks\PublishExtension\v5\node_modules\7zip-bin\mac -recurse
        del BuildTasks\*\v*\package-lock.json
        del BuildTasks\*\v*\*.ts
        del BuildTasks\*\v*\tsconfig.json
        del BuildTasks\*\v*\.snyk
        del BuildTasks\*\v*\*.md
      displayName: 'Delete unneeded files'

    - task: TfxInstaller@5
      displayName: 'Use Node CLI for Azure DevOps'
      inputs:
        version: '0.x'
        checkLatest: true

    - task: PackageAzureDevOpsExtension@5
      displayName: 'Package Extension: $(Build.SourcesDirectory)'
      name: 'packagebuild'
      inputs:
        rootFolder: '$(Build.SourcesDirectory)'
        outputPath: '$(Build.ArtifactStagingDirectory)\vsts-developer-tools-build-tasks-build.vsix'
        publisherId: 'ms-devlabs'
        extensionId: 'vsts-developer-tools-build-tasks'
        extensionTag: '-build'
        extensionName: 'Azure DevOps Extension Tasks'
        extensionVersion: '$(Build.BuildNumber)'
        updateTasksVersion: true
        updateTasksVersionType: patch
        extensionVisibility: private

    - task: PackageAzureDevOpsExtension@5
      name: 'packageprivate'
      displayName: 'Package the private extension'
      inputs:
        rootFolder: '$(Build.SourcesDirectory)'
        outputPath: '$(Build.ArtifactStagingDirectory)\vsts-developer-tools-build-tasks-private.vsix'
        publisherId: 'ms-devlabs'
        extensionName: 'Azure DevOps Extension Tasks'
        extensionId: 'vsts-developer-tools-build-tasks'
        extensionVersion: '$(Build.BuildNumber)'
        extensionTag: '-dev'
        extensionVisibility: 'private'

    - task: PackageAzureDevOpsExtension@5
      displayName: 'Package the public extension'
      name: 'packagepublic'
      inputs:
        rootFolder: '$(Build.SourcesDirectory)'
        outputPath: '$(Build.ArtifactStagingDirectory)\vsts-developer-tools-build-tasks-public.vsix'
        publisherId: 'ms-devlabs'
        extensionName: 'Azure DevOps Extension Tasks'
        extensionId: 'vsts-developer-tools-build-tasks'
        extensionVersion: '$(Build.BuildNumber)'
        extensionVisibility: 'public'

    - publish: $(Build.ArtifactStagingDirectory)
      artifact: vsix
      displayName: 'Publish vsix as pipeline artifact'
      condition: succeededOrFailed()

- stage: PublishDev
  displayName: 'Publish privately'
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  dependsOn: 'Build'
  jobs:
  - deployment:
    environment: dev
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: vsix
            patterns: "**/*-private.vsix"

          - task: NodeTool@0
            inputs:
              versionSpec: '16.x'
            displayName: 'Install Node.js'

          - task: TfxInstaller@5
            displayName: 'Use Node CLI for Azure DevOps'
            inputs:
              version: '0.x'
              checkLatest: true

          - task: PublishAzureDevOpsExtension@5
            name: 'publishDev'
            displayName: 'Publish the private extension to ms-devlabs'
            inputs:
              connectTo: 'AzureRM'
              connectedServiceNameAzureRM: 'SecurePublishMarketplaceServiceConnection'
              fileType: 'vsix'
              vsixFile: '$(Pipeline.Workspace)/vsix/vsts-developer-tools-build-tasks-private.vsix'
              noWaitValidation: true

          - task: IsAzureDevOpsExtensionValid@5
            displayName: 'Validate the private extension on the marketplace'
            inputs:
              connectTo: 'AzureRM'
              connectedServiceNameAzureRM: 'SecurePublishMarketplaceServiceConnection'
              method: 'vsix'
              vsixFile: '$(publishDev.Extension.OutputPath)'

- stage: PublishProd
  displayName: 'Publish publicly to MsDevLabs'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  dependsOn: 'PublishDev'
  jobs:
  - deployment:
    environment: public-vsts-developer-tools-build-tasks
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: vsix
            patterns: "**/*-public.vsix"

          - task: NodeTool@0
            inputs:
              versionSpec: '16.x'
            displayName: 'Install Node.js'

          - task: TfxInstaller@5
            displayName: 'Use Node CLI for Azure DevOps'
            inputs:
              version: '0.x'
              checkLatest: true

          - task: PublishAzureDevOpsExtension@5
            name: 'publishProd'
            displayName: 'Publish the public extension to ms-devlabs'
            inputs:
              connectTo: 'AzureRM'
              connectedServiceNameAzureRM: 'SecurePublishMarketplaceServiceConnection'
              fileType: 'vsix'
              vsixFile: '$(Pipeline.Workspace)/vsix/vsts-developer-tools-build-tasks-public.vsix'
              noWaitValidation: true

          - task: IsAzureDevOpsExtensionValid@5
            displayName: 'Validate the private extension on the marketplace'
            inputs:
              connectTo: 'AzureRM'
              connectedServiceNameAzureRM: 'SecurePublishMarketplaceServiceConnection'
              method: 'vsix'
              vsixFile: '$(publishProd.Extension.OutputPath)'

          - task: GitHubRelease@1
            displayName: 'Publish the public extension to GitHub'
            inputs:
              gitHubConnection: 'microsoft/azure-devops-extension-tasks'
              repositoryName: '$(Build.Repository.Name)'
              action: 'create'
              target: '$(Build.SourceVersion)'
              tagSource: 'userSpecifiedTag'
              tag: 'v$(Build.BuildNumber)'
              title: 'v$(Build.BuildNumber)'
              releaseNotesSource: 'inline'
              assets: '$(publishProd.Extension.OutputPath)*'
              changeLogCompareToRelease: 'lastFullRelease'
              changeLogType: 'issueBased'
              changeLogLabels: '[{ "state" : "closed" }]'
